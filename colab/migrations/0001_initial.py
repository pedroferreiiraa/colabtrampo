# Generated by Django 5.0.7 on 2024-07-25 20:04

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pergunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Pergunta',
                'verbose_name_plural': 'Perguntas',
                'db_table': 'pergunta',
            },
        ),
        migrations.CreateModel(
            name='Topico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.TextField(max_length=100)),
            ],
            options={
                'verbose_name': 'Tópico',
                'verbose_name_plural': 'Tópicos',
                'db_table': 'topico',
            },
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turno', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Turno',
                'verbose_name_plural': 'Turnos',
                'db_table': 'turno',
            },
        ),
        migrations.CreateModel(
            name='Colaborador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(blank=True, max_length=200)),
                ('cargo', models.CharField(max_length=100)),
                ('is_lider', models.BooleanField(default=False)),
                ('is_coordenador', models.BooleanField(default=False)),
                ('data_admissao', models.DateTimeField(blank=True, null=True)),
                ('funcao', models.CharField(blank=True, max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='Grupos a que este usuário pertence.', related_name='colaboradores', to='auth.group', verbose_name='Grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas concedidas a este usuário.', related_name='colaboradores', to='auth.permission', verbose_name='Permissões')),
            ],
            options={
                'verbose_name': 'Colaborador',
                'verbose_name_plural': 'Colaboradores',
                'db_table': 'colaborador',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(default='', max_length=100)),
                ('data_admissao', models.DateField(default=datetime.date.today)),
                ('cargo_atual', models.CharField(default='', max_length=100)),
                ('area', models.CharField(default='', max_length=100)),
                ('periodo_referencia', models.CharField(default='', max_length=100)),
                ('data_avaliacao', models.DateField(default=datetime.date.today)),
                ('competencias', models.CharField(max_length=100)),
                ('compromissos', models.CharField(max_length=100)),
                ('integracao', models.CharField(max_length=100)),
                ('caracteristicas', models.CharField(max_length=100)),
                ('pontos_melhoria', models.TextField(blank=True)),
                ('pdi', models.TextField(blank=True)),
                ('metas', models.CharField(max_length=100)),
                ('alinhamento_semestral', models.CharField(max_length=100)),
                ('comentarios', models.TextField(blank=True)),
                ('avaliador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_realizadas', to=settings.AUTH_USER_MODEL)),
                ('colaborador_avaliado', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_recebidas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
                'db_table': 'avaliacao',
            },
        ),
        migrations.CreateModel(
            name='AvaliacaoLider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('pontos_melhoria', models.TextField(blank=True, null=True)),
                ('pdi', models.TextField(blank=True, null=True)),
                ('metas', models.TextField(blank=True, null=True)),
                ('alinhamento_semestral', models.TextField(blank=True, null=True)),
                ('comentarios', models.TextField(blank=True, null=True)),
                ('avaliacao_original', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='avaliacao_original', to='colab.avaliacao')),
                ('avaliador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_lider_realizadas', to=settings.AUTH_USER_MODEL)),
                ('colaborador_avaliado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_lideradas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Avaliação do Líder',
                'verbose_name_plural': 'Avaliações dos Líderes',
                'db_table': 'avaliacao_lider',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('coordenador', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departamento_coordenado', to=settings.AUTH_USER_MODEL)),
                ('lider', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departamento_liderado', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
                'db_table': 'departamento',
            },
        ),
        migrations.AddField(
            model_name='colaborador',
            name='departamento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='colab.departamento'),
        ),
        migrations.CreateModel(
            name='Resposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.IntegerField()),
                ('texto', models.TextField(blank=True, null=True)),
                ('avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respostas', to='colab.avaliacao')),
                ('pergunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colab.pergunta')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resposta',
                'verbose_name_plural': 'Respostas',
                'db_table': 'resposta',
            },
        ),
        migrations.CreateModel(
            name='RespostaLider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.IntegerField()),
                ('texto', models.TextField(blank=True, null=True)),
                ('avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respostas_lider', to='colab.avaliacaolider')),
                ('pergunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colab.pergunta')),
            ],
            options={
                'verbose_name': 'Resposta do Líder',
                'verbose_name_plural': 'Respostas dos Líderes',
                'db_table': 'resposta_lider',
            },
        ),
        migrations.AddField(
            model_name='pergunta',
            name='topico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perguntas', to='colab.topico'),
        ),
        migrations.AddField(
            model_name='colaborador',
            name='turno',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='colab.turno'),
        ),
    ]
