# Generated by Django 5.0.7 on 2024-07-23 17:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pergunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'pergunta',
            },
        ),
        migrations.CreateModel(
            name='Topico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'topico',
            },
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turno', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'turno',
            },
        ),
        migrations.CreateModel(
            name='Colaborador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(blank=True, max_length=200)),
                ('cargo', models.CharField(max_length=100)),
                ('is_lider', models.BooleanField(default=False)),
                ('is_coordenador', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='Grupos a que este usuário pertence.', related_name='colaboradores', to='auth.group', verbose_name='Grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas concedidas a este usuário.', related_name='colaboradores', to='auth.permission', verbose_name='Permissões')),
            ],
            options={
                'db_table': 'colaborador',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('coordenador', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departamento_coordenado', to=settings.AUTH_USER_MODEL)),
                ('lider', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departamento_liderado', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'departamento',
            },
        ),
        migrations.AddField(
            model_name='colaborador',
            name='departamento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='colab.departamento'),
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('pontos_melhoria', models.TextField(blank=True, null=True)),
                ('pdi', models.TextField(blank=True, null=True)),
                ('metas', models.TextField(blank=True, null=True)),
                ('alinhamento_semestral', models.TextField(blank=True, null=True)),
                ('media_geral', models.FloatField(blank=True, null=True)),
                ('comentarios', models.TextField(blank=True, null=True)),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now)),
                ('avaliador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_realizadas', to=settings.AUTH_USER_MODEL)),
                ('colaborador_avaliado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_recebidas', to=settings.AUTH_USER_MODEL)),
                ('pergunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='colab.pergunta')),
            ],
            options={
                'db_table': 'avaliacao',
            },
        ),
        migrations.CreateModel(
            name='Resposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.TextField(default='')),
                ('avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respostas', to='colab.avaliacao')),
                ('pergunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colab.pergunta')),
            ],
            options={
                'db_table': 'resposta',
            },
        ),
        migrations.AddField(
            model_name='pergunta',
            name='topico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perguntas', to='colab.topico'),
        ),
        migrations.AddField(
            model_name='colaborador',
            name='turno',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='colab.turno'),
        ),
    ]
